#include <vsg/io/VSG.h>
static auto assimp_vert = []() {std::istringstream str(
R"(#vsga 0.1.5
Root id=1 vsg::ShaderStage
{
  NumUserObjects 0
  stage 1
  entryPointName "main"
  module id=2 vsg::ShaderModule
  {
    NumUserObjects 0
    Source "#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(push_constant) uniform PushConstants {
    mat4 projection;
    mat4 modelView;
} pc;

layout(location = 0) in vec3 osg_Vertex;
layout(location = 0) out vec3 worldPos;

layout(location = 1) in vec3 osg_Normal;
layout(location = 1) out vec3 normalDir;

layout(location = 2) in vec2 osg_TexCoord0;
layout(location = 2) out vec2 texCoord0;

layout(location = 5) out vec3 viewDir;
layout(location = 6) out vec3 lightDir;

out gl_PerVertex{ vec4 gl_Position; };

void main()
{
    gl_Position = (pc.projection * pc.modelView) * vec4(osg_Vertex, 1.0);
    worldPos = vec4(pc.modelView * vec4(osg_Vertex, 1.0)).xyz;

    vec3 n = (pc.modelView * vec4(osg_Normal, 0.0)).xyz;
    normalDir = n;
    vec4 lpos = /*osg_LightSource.position*/ vec4(0.0, 0.25, 1.0, 0.0);
    viewDir = -vec3(pc.modelView * vec4(osg_Vertex, 1.0));

    if (lpos.w == 0.0)
        lightDir = lpos.xyz;
    else
        lightDir = lpos.xyz + viewDir;

    texCoord0 = osg_TexCoord0 * vec2(1,1);
}
"
    hints id=0
    SPIRVSize 729
    SPIRV 119734787 65536 524298 110 0 131089 1 393227 1 1280527431 1685353262 808793134
     0 196622 0 1 917519 0 4 1852399981 0 10 26 37
     56 65 71 94 104 106 196611 2 450 589828 1096764487 1935622738
     1918988389 1600484449 1684105331 1868526181 1667590754 29556 262149 4 1852399981 0 393221 8
     1348430951 1700164197 2019914866 0 393222 8 0 1348430951 1953067887 7237481 196613 10
     0 393221 14 1752397136 1936617283 1953390964 115 393222 14 0 1785688688 1769235301
     28271 393222 14 1 1701080941 1701402220 119 196613 16 25456 327685 26
     1600615279 1953654102 30821 327685 37 1819438967 1936674916 0 196613 53 110 327685
     56 1600615279 1836216142 27745 327685 65 1836216174 1766091873 114 262149 68 1936683116
     0 262149 71 2003134838 7498052 327685 94 1751607660 1919501428 0 327685 104
     1131963764 1685221231 48 393221 106 1600615279 1131963732 1685221231 48 327752 8 0
     11 0 196679 8 2 262216 14 0 5 327752 14 0
     35 0 327752 14 0 7 16 262216 14 1 5 327752
     14 1 35 64 327752 14 1 7 16 196679 14 2
     262215 26 30 0 262215 37 30 0 262215 56 30 1
     262215 65 30 1 262215 71 30 5 262215 94 30 6
     262215 104 30 2 262215 106 30 2 131091 2 196641 3
     2 196630 6 32 262167 7 6 4 196638 8 7 262176
     9 3 8 262203 9 10 3 262165 11 32 1 262187
     11 12 0 262168 13 7 4 262174 14 13 13 262176
     15 9 14 262203 15 16 9 262176 17 9 13 262187
     11 20 1 262167 24 6 3 262176 25 1 24 262203
     25 26 1 262187 6 28 1065353216 262176 34 3 7 262176
     36 3 24 262203 36 37 3 262176 52 7 24 262203
     25 56 1 262187 6 58 0 262203 36 65 3 262176
     67 7 7 262187 6 69 1048576000 458796 7 70 58 69
     28 58 262203 36 71 3 262165 85 32 0 262187 85
     86 3 262176 87 7 6 131092 90 262203 36 94 3
     262167 102 6 2 262176 103 3 102 262203 103 104 3
     262176 105 1 102 262203 105 106 1 327724 102 108 28
     28 327734 2 4 0 3 131320 5 262203 52 53 7
     262203 67 68 7 327745 17 18 16 12 262205 13 19
     18 327745 17 21 16 20 262205 13 22 21 327826 13
     23 19 22 262205 24 27 26 327761 6 29 27 0
     327761 6 30 27 1 327761 6 31 27 2 458832 7
     32 29 30 31 28 327825 7 33 23 32 327745 34
     35 10 12 196670 35 33 327745 17 38 16 20 262205
     13 39 38 262205 24 40 26 327761 6 41 40 0
     327761 6 42 40 1 327761 6 43 40 2 458832 7
     44 41 42 43 28 327825 7 45 39 44 327761 6
     46 45 0 327761 6 47 45 1 327761 6 48 45
     2 327761 6 49 45 3 458832 7 50 46 47 48
     49 524367 24 51 50 50 0 1 2 196670 37 51
     327745 17 54 16 20 262205 13 55 54 262205 24 57
     56 327761 6 59 57 0 327761 6 60 57 1 327761
     6 61 57 2 458832 7 62 59 60 61 58 327825
     7 63 55 62 524367 24 64 63 63 0 1 2
     196670 53 64 262205 24 66 53 196670 65 66 196670 68
     70 327745 17 72 16 20 262205 13 73 72 262205 24
     74 26 327761 6 75 74 0 327761 6 76 74 1
     327761 6 77 74 2 458832 7 78 75 76 77 28
     327825 7 79 73 78 327761 6 80 79 0 327761 6
     81 79 1 327761 6 82 79 2 393296 24 83 80
     81 82 262271 24 84 83 196670 71 84 327745 87 88
     68 86 262205 6 89 88 327860 90 91 89 58 196855
     93 0 262394 91 92 97 131320 92 262205 7 95 68
     524367 24 96 95 95 0 1 2 196670 94 96 131321
     93 131320 97 262205 7 98 68 524367 24 99 98 98
     0 1 2 262205 24 100 71 327809 24 101 99 100
     196670 94 101 131321 93 131320 93 262205 102 107 106 327813
     102 109 107 108 196670 104 109 65789 65592
  }
  NumSpecializationConstants 0
}
)");
vsg::VSG io;
return io.read_cast<vsg::ShaderStage>(str);
};
