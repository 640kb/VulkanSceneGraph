#include <vsg/io/VSG.h>
static auto text_ShaderSet = []() {std::istringstream str(
R"(#vsga 0.6.0
Root id=1 vsg::ShaderSet
{
  userObjects 0
  stages 2
  vsg::ShaderStage id=2 vsg::ShaderStage
  {
    userObjects 0
    stage 1
    entryPointName "main"
    module id=3 vsg::ShaderModule
    {
      userObjects 0
      hints id=0
      source "#version 450
#extension GL_ARB_separate_shader_objects : enable

#pragma import_defines (GPU_LAYOUT, CPU_LAYOUT, BILLBOARD)

#ifdef GPU_LAYOUT

    // GPU layout provides computes vertex values based on layout computed in the vertex shader
    #define GLYPH_DIMENSIONS 0
    #define GLYPH_BEARINGS 1
    #define GLYPH_UVRECT 2

    // specialization constants
    layout(constant_id = 0) const uint numTextIndices = 256;

    layout(set = 0, binding = 1) uniform sampler2D glyphMetricsSampler;

    layout(set = 1, binding = 0) uniform TextLayout {
        vec4 position;
        vec4 horizontal;
        vec4 vertical;
        vec4 color;
        vec4 outlineColor;
        float outlineWidth;
    } textLayout;

    layout(set = 1, binding = 1) uniform TextIndices {
        uvec4 glyph_index[numTextIndices];
    } text;

#else

    // CPU layout provides all vertex data
    layout(location = 1) in vec4 inColor;
    layout(location = 2) in vec4 inOutlineColor;
    layout(location = 3) in float inOutlineWidth;
    layout(location = 4) in vec3 inTexCoord;

    #ifdef BILLBOARD
    layout(location = 5) in vec4 inCenterAndAutoScaleDistance;
    #endif

#endif



layout(push_constant) uniform PushConstants {
    mat4 projection;
    mat4 modelview;
} pc;

layout(location = 0) in vec3 inPosition;

layout(location = 0) out vec4 fragColor;
layout(location = 1) out vec4 outlineColor;
layout(location = 2) out float outlineWidth;
layout(location = 3) out vec2 fragTexCoord;

out gl_PerVertex {
    vec4 gl_Position;
};

#ifdef BILLBOARD
mat4 computeBillboadMatrix(vec4 center_eye, float autoScaleDistance)
{
    float distance = -center_eye.z;

    float scale = (distance < autoScaleDistance) ? distance/autoScaleDistance : 1.0;
    mat4 S = mat4(scale, 0.0, 0.0, 0.0,
                  0.0, scale, 0.0, 0.0,
                  0.0, 0.0, scale, 0.0,
                  0.0, 0.0, 0.0, 1.0);

    mat4 T = mat4(1.0, 0.0, 0.0, 0.0,
                  0.0, 1.0, 0.0, 0.0,
                  0.0, 0.0, 1.0, 0.0,
                  center_eye.x, center_eye.y, center_eye.z, 1.0);
    return T*S;
}
#endif

void main() {
#ifdef GPU_LAYOUT
    // compute the position of the glyph
    float horiAdvance = 0.0;
    float vertAdvance = 0.0;
    for(uint i=0; i<gl_InstanceIndex; ++i)
    {
        uint glyph_index = text.glyph_index[i / 4][i % 4];
        if (glyph_index==0)
        {
            // treat as a newlline
            vertAdvance -= 1.0;
            horiAdvance = 0.0;
        }
        else
        {
            horiAdvance += texture(glyphMetricsSampler, vec2(GLYPH_DIMENSIONS, glyph_index))[2];
        }
    }

    // compute the position of vertex
    uint glyph_index = text.glyph_index[gl_InstanceIndex / 4][gl_InstanceIndex % 4];

    vec4 dimensions = texture(glyphMetricsSampler, vec2(GLYPH_DIMENSIONS, glyph_index));
    vec4 bearings = texture(glyphMetricsSampler, vec2(GLYPH_BEARINGS, glyph_index));
    vec4 uv_rec = texture(glyphMetricsSampler, vec2(GLYPH_UVRECT, glyph_index));

    vec3 pos = textLayout.horizontal.xyz * (horiAdvance + textLayout.horizontal.w + bearings.x + inPosition.x * dimensions.x) +
               textLayout.vertical.xyz * (vertAdvance + textLayout.vertical.w + bearings.y + (inPosition.y-1.0) * dimensions.y);

    #ifdef BILLBOARD
    gl_Position = (pc.projection * computeBillboadMatrix(pc.modelview * vec4(textLayout.position.xyz, 1.0), textLayout.position.w)) * vec4(pos, 1.0);
    #else
    gl_Position = (pc.projection * pc.modelview) * vec4(textLayout.position.xyz + pos, 1.0);
    #endif

    gl_Position.z -= inPosition.z*0.001;

    fragColor = textLayout.color;
    outlineColor = textLayout.outlineColor;
    outlineWidth = textLayout.outlineWidth;
    fragTexCoord = vec2(mix(uv_rec[0], uv_rec[2], inPosition.x), mix(uv_rec[1], uv_rec[3], inPosition.y));

#else
    // CPU layout provides all vertex data
    #ifdef BILLBOARD
    gl_Position = (pc.projection * computeBillboadMatrix(pc.modelview * vec4(inCenterAndAutoScaleDistance.xyz, 1.0), inCenterAndAutoScaleDistance.w)) * vec4(inPosition, 1.0);
    #else
    gl_Position = (pc.projection * pc.modelview) * vec4(inPosition, 1.0);
    #endif

    gl_Position.z -= inTexCoord.z*0.001;
    fragColor = inColor;
    outlineColor = inOutlineColor;
    outlineWidth = inOutlineWidth;
    fragTexCoord = inTexCoord.xy;
#endif

}
"
      code 0
      
    }
    NumSpecializationConstants 1
    id 0
    data id=4 vsg::uintValue
    {
      userObjects 0
      Layout 0 0 0 1 1 1 0 -1 0
      Value 256
    }
  }
  vsg::ShaderStage id=5 vsg::ShaderStage
  {
    userObjects 0
    stage 16
    entryPointName "main"
    module id=6 vsg::ShaderModule
    {
      userObjects 0
      hints id=0
      source "#version 450

layout(binding = 0) uniform sampler2D texSampler;

layout(location = 0) in vec4 fragColor;
layout(location = 1) in vec4 outlineColor;
layout(location = 2) in float outlineWidth;
layout(location = 3) in vec2 fragTexCoord;

layout(location = 0) out vec4 outColor;

vec2 glyph_alpha(vec2 texcoord, vec2 dx, vec2 dy)
{
    float lod = textureQueryLod(texSampler, texcoord).x;
    float innerCutOff = 0.0;
    if (lod>0.0) innerCutOff = lod * 0.03;

    float scale = 1.0;
    float distance_from_edge = (textureGrad(texSampler, texcoord, dx, dy).r);

    float d_distance_dx = dFdx(distance_from_edge) * scale;
    float d_distance_dy = dFdy(distance_from_edge) * scale;

    float delta = sqrt(d_distance_dx * d_distance_dx + d_distance_dy * d_distance_dy);

    float min_distance_from_edge = distance_from_edge - delta;
    float max_distance_from_edge = distance_from_edge + delta;

    //min_distance_from_edge += 0.0;
    min_distance_from_edge += innerCutOff;
    float inner_alpha = 0.0;
    if (min_distance_from_edge >= 0.0) inner_alpha = 1.0;
    else if (max_distance_from_edge >= 0.0) inner_alpha = max_distance_from_edge/(max_distance_from_edge-min_distance_from_edge);

    min_distance_from_edge += outlineWidth;
    float outer_alpha = 0.0;
    if (min_distance_from_edge >= 0.0) outer_alpha = 1.0;
    else if (max_distance_from_edge >= 0.0) outer_alpha = max_distance_from_edge/(max_distance_from_edge-min_distance_from_edge);

    return vec2(inner_alpha, outer_alpha);
}

vec2 sampled_glyph_alpha_grid(vec2 texcoord)
{
    float lod = textureQueryLod(texSampler, texcoord).x;
    vec2 dx = dFdx(texcoord);
    vec2 dy = dFdy(texcoord);

    if (lod<=0.0) return glyph_alpha(texcoord, dx, dy);

    float area = length(dx) * length(dy);
    float average_side = sqrt(area) / (1.0 + lod);
    float num_x = ceil(length(dx) / average_side);
    float num_y = ceil(length(dy) / average_side);

    vec2 interval_dx = dx / num_x;
    vec2 interval_dy = dy / num_y;

    vec2 total_alpha = vec2(0.0, 0.0);
    vec2 tc_row_start = texcoord - dx*0.5 - dy*0.5;
    for(float r = 0; r<num_y; ++r)
    {
        vec2 tc = tc_row_start;
        tc_row_start = tc_row_start + interval_dy;

        for(float c = 0; c<num_x; ++c)
        {
            total_alpha = total_alpha + glyph_alpha(tc, interval_dx, interval_dy);

            tc = tc + interval_dx;
        }
    }

    return total_alpha / (num_x * num_y);
}

void main()
{
    vec2 alphas = sampled_glyph_alpha_grid(fragTexCoord);

    if (alphas[1]>0.0)
    {
        vec4 glyph = vec4(fragColor.rgb, fragColor.a * alphas[0]);
        vec4 outline = vec4(outlineColor.rgb, outlineColor.a * alphas[1]);
        outColor = mix(outline, glyph, glyph.a);
    }
    else
    {
        outColor = vec4(fragColor.rgb,  fragColor.a * alphas[0]);
    }

    if (outColor.a == 0.0) discard;
}
"
      code 0
      
    }
    NumSpecializationConstants 0
  }
  attributeBindings 6
  name "inPosition"
  define ""
  location 0
  format 106
  data id=7 vsg::vec3Array
  {
    userObjects 0
    Layout 0 12 0 1 1 1 0 -1 0
    size 1
    storage id=0
    data 0 0 0
  }
  name "inColor"
  define "CPU_LAYOUT"
  location 1
  format 109
  data id=8 vsg::vec4Array
  {
    userObjects 0
    Layout 0 16 0 1 1 1 0 -1 0
    size 1
    storage id=0
    data 0 0 0 0
  }
  name "inOutlineColor"
  define "CPU_LAYOUT"
  location 2
  format 109
  data id=9 vsg::vec4Array
  {
    userObjects 0
    Layout 0 16 0 1 1 1 0 -1 0
    size 1
    storage id=0
    data 0 0 0 0
  }
  name "inOutlineWidth"
  define "CPU_LAYOUT"
  location 3
  format 100
  data id=10 vsg::floatArray
  {
    userObjects 0
    Layout 0 4 0 1 1 1 0 -1 0
    size 1
    storage id=0
    data 0
  }
  name "inTexCoord"
  define "CPU_LAYOUT"
  location 4
  format 106
  data id=11 vsg::vec3Array
  {
    userObjects 0
    Layout 0 12 0 1 1 1 0 -1 0
    size 1
    storage id=0
    data 0 0 0
  }
  name "inCenterAndAutoScaleDistance"
  define "BILLBOARD"
  location 5
  format 109
  data id=12 vsg::vec4Array
  {
    userObjects 0
    Layout 0 16 0 1 1 1 0 -1 0
    size 1
    storage id=0
    data 0 0 0 0
  }
  uniformBindings 4
  name "textureAtlas"
  define ""
  set 0
  binding 0
  descriptorType 1
  descriptorCount 1
  stageFlags 16
  data id=13 vsg::vec4Array2D
  {
    userObjects 0
    Layout 0 16 0 1 1 1 0 -1 0
    width 1
    height 1
    storage id=0
    data 0 0 0 0
  }
  name "glyphMetrics"
  define "GPU_LAYOUT"
  set 0
  binding 1
  descriptorType 1
  descriptorCount 1
  stageFlags 1
  data id=14 vsg::vec4Array2D
  {
    userObjects 0
    Layout 0 16 0 1 1 1 0 -1 0
    width 1
    height 1
    storage id=0
    data 0 0 0 0
  }
  name "textLayout"
  define "GPU_LAYOUT"
  set 1
  binding 0
  descriptorType 6
  descriptorCount 1
  stageFlags 1
  data id=15 vsg::TextLayoutValue
  {
    userObjects 0
    Layout 0 0 0 1 1 1 0 -1 0
    Value 0 0 0 0 0 0 0 0 0 0 0 0
     0 0 0 0 0 0 128 63 0 0 0 0
     0 0 0 0 0 0 0 0 0 0 0 0
     0 0 128 63 0 0 0 0 0 0 0 0
     0 0 128 63 0 0 128 63 0 0 128 63
     0 0 128 63 0 0 0 0 0 0 0 0
     0 0 0 0 0 0 128 63 0 0 0 0
  }
  name "text"
  define "GPU_LAYOUT"
  set 1
  binding 1
  descriptorType 6
  descriptorCount 1
  stageFlags 1
  data id=16 vsg::uivec4Array2D
  {
    userObjects 0
    Layout 0 16 0 1 1 1 0 -1 0
    width 1
    height 1
    storage id=0
    data 0 0 0 0
  }
  pushConstantRanges 1
  name "pc"
  define ""
  stageFlags 1
  offset 0
  size 128
  definesArrayStates 0
  optionalDefines 0
  defaultGraphicsPipelineStates 0
  variants 4
  hints id=17 vsg::ShaderCompileSettings
  {
    vulkanVersion 4194304
    clientInputVersion 100
    language 0
    defaultVersion 450
    target 65536
    forwardCompatible 0
    defines 1
    element "CPU_LAYOUT"
  }
  stages 2
  vsg::ShaderStage id=18 vsg::ShaderStage
  {
    userObjects 0
    stage 1
    entryPointName "main"
    module id=19 vsg::ShaderModule
    {
      userObjects 0
      hints id=17
      source ""
      code 490
       119734787 65536 524298 64 0 131089 1 393227 1 1280527431 1685353262 808793134
       0 196622 0 1 983055 0 4 1852399981 0 10 26 36
       49 51 53 54 56 57 61 196611 2 450 589828 1096764487
       1935622738 1918988389 1600484449 1684105331 1868526181 1667590754 29556 262149 4 1852399981 0 393221
       8 1348430951 1700164197 2019914866 0 393222 8 0 1348430951 1953067887 7237481 196613
       10 0 393221 14 1752397136 1936617283 1953390964 115 393222 14 0 1785688688
       1769235301 28271 393222 14 1 1701080941 1701410412 119 196613 16 25456 327685
       26 1867542121 1769236851 28271 327685 36 1700032105 1869562744 25714 327685 49 1734439526
       1869377347 114 262149 51 1866690153 7499628 393221 53 1819571567 1130720873 1919904879 0
       393221 54 1968139881 1852402804 1819231077 29295 393221 56 1819571567 1466265193 1752458345 0
       393221 57 1968139881 1852402804 1684625253 26740 393221 61 1734439526 1131963732 1685221231 0
       327752 8 0 11 0 196679 8 2 262216 14 0 5
       327752 14 0 35 0 327752 14 0 7 16 262216 14
       1 5 327752 14 1 35 64 327752 14 1 7 16
       196679 14 2 262215 26 30 0 262215 36 30 4 262215
       49 30 0 262215 51 30 1 262215 53 30 1 262215
       54 30 2 262215 56 30 2 262215 57 30 3 262215
       61 30 3 131091 2 196641 3 2 196630 6 32 262167
       7 6 4 196638 8 7 262176 9 3 8 262203 9
       10 3 262165 11 32 1 262187 11 12 0 262168 13
       7 4 262174 14 13 13 262176 15 9 14 262203 15
       16 9 262176 17 9 13 262187 11 20 1 262167 24
       6 3 262176 25 1 24 262203 25 26 1 262187 6
       28 1065353216 262176 34 3 7 262203 25 36 1 262165 37
       32 0 262187 37 38 2 262176 39 1 6 262187 6
       42 981668463 262176 44 3 6 262203 34 49 3 262176 50
       1 7 262203 50 51 1 262203 34 53 3 262203 50
       54 1 262203 44 56 3 262203 39 57 1 262167 59
       6 2 262176 60 3 59 262203 60 61 3 327734 2
       4 0 3 131320 5 327745 17 18 16 12 262205 13
       19 18 327745 17 21 16 20 262205 13 22 21 327826
       13 23 19 22 262205 24 27 26 327761 6 29 27
       0 327761 6 30 27 1 327761 6 31 27 2 458832
       7 32 29 30 31 28 327825 7 33 23 32 327745
       34 35 10 12 196670 35 33 327745 39 40 36 38
       262205 6 41 40 327813 6 43 41 42 393281 44 45
       10 12 38 262205 6 46 45 327811 6 47 46 43
       393281 44 48 10 12 38 196670 48 47 262205 7 52
       51 196670 49 52 262205 7 55 54 196670 53 55 262205
       6 58 57 196670 56 58 262205 24 62 36 458831 59
       63 62 62 0 1 196670 61 63 65789 65592
    }
    NumSpecializationConstants 1
    id 0
    data id=4
  }
  vsg::ShaderStage id=20 vsg::ShaderStage
  {
    userObjects 0
    stage 16
    entryPointName "main"
    module id=21 vsg::ShaderModule
    {
      userObjects 0
      hints id=17
      source ""
      code 1807
       119734787 65536 524298 305 0 131089 1 131089 50 393227 1 1280527431
       1685353262 808793134 0 196622 0 1 655375 4 4 1852399981 0 97
       238 251 266 279 196624 4 7 196611 2 450 262149 4
       1852399981 0 589829 13 1887005799 1818320744 677472368 993158774 993158774 993158774 0 327685
       10 1668834676 1685221231 0 196613 11 30820 196613 12 31076 655365 17
       1886216563 1600415084 1887005799 1818320744 1600219248 1684632167 845575720 59 327685 16 1668834676 1685221231
       0 196613 20 6582124 327685 24 1400399220 1819307361 29285 327685 31 1701736041
       1953842034 6710863 262149 41 1818321779 101 458757 43 1953720676 1701015137 1869768287 1684365165
       25959 393221 51 1768185700 1851880563 1683973475 120 393221 56 1768185700 1851880563 1683973475
       121 262149 61 1953260900 97 524293 70 1601071469 1953720676 1701015137 1869768287 1684365165
       25959 524293 74 1601724781 1953720676 1701015137 1869768287 1684365165 25959 327685 81 1701736041
       1818320754 6383728 393221 97 1819571567 1466265193 1752458345 0 327685 101 1702131055 1818320754
       6383728 196613 121 6582124 196613 126 30820 196613 129 31076 262149 136
       1634886000 109 262149 138 1634886000 109 262149 140 1634886000 109 262149 144
       1634038369 0 393221 150 1919252065 1600481121 1701079411 0 262149 156 1601009006 120
       262149 162 1601009006 121 327685 168 1702129257 1818326642 7890015 327685 173 1702129257
       1818326642 7955551 327685 178 1635020660 1818320748 6383728 393221 180 1918854004 1935636335 1953653108
       0 196613 189 114 196613 198 25460 196613 203 99 262149 213
       1634886000 109 262149 215 1634886000 109 262149 217 1634886000 109 262149 236
       1752198241 29537 393221 238 1734439526 1131963732 1685221231 0 262149 239 1634886000 109
       262149 249 1887005799 104 327685 251 1734439526 1869377347 114 262149 265 1819571567
       6647401 393221 266 1819571567 1130720873 1919904879 0 327685 279 1131705711 1919904879 0
       262215 24 34 0 262215 24 33 0 262215 97 30 2
       262215 238 30 3 262215 251 30 0 262215 266 30 1
       262215 279 30 0 131091 2 196641 3 2 196630 6 32
       262167 7 6 2 262176 8 7 7 393249 9 7 8
       8 8 262177 15 7 8 262176 19 7 6 589849 21
       6 1 0 0 0 1 0 196635 22 21 262176 23
       0 22 262203 23 24 0 262165 28 32 0 262187 28
       29 0 262187 6 32 0 131092 34 262187 6 39 1022739087
       262187 6 42 1065353216 262167 48 6 4 262176 96 1 6
       262203 96 97 1 327724 7 179 32 32 262187 6 183
       1056964608 262176 237 1 7 262203 237 238 1 262187 28 242
)"
R"(       1 262176 248 7 48 262176 250 1 48 262203 250 251
       1 262167 252 6 3 262187 28 255 3 262203 250 266
       1 262176 278 3 48 262203 278 279 3 262176 298 3
       6 327734 2 4 0 3 131320 5 262203 8 236 7
       262203 8 239 7 262203 248 249 7 262203 248 265 7
       262205 7 240 238 196670 239 240 327737 7 241 17 239
       196670 236 241 327745 19 243 236 242 262205 6 244 243
       327866 34 245 244 32 196855 247 0 262394 245 246 286
       131320 246 262205 48 253 251 524367 252 254 253 253 0
       1 2 327745 96 256 251 255 262205 6 257 256 327745
       19 258 236 29 262205 6 259 258 327813 6 260 257
       259 327761 6 261 254 0 327761 6 262 254 1 327761
       6 263 254 2 458832 48 264 261 262 263 260 196670
       249 264 262205 48 267 266 524367 252 268 267 267 0
       1 2 327745 96 269 266 255 262205 6 270 269 327745
       19 271 236 242 262205 6 272 271 327813 6 273 270
       272 327761 6 274 268 0 327761 6 275 268 1 327761
       6 276 268 2 458832 48 277 274 275 276 273 196670
       265 277 262205 48 280 265 262205 48 281 249 327745 19
       282 249 255 262205 6 283 282 458832 48 284 283 283
       283 283 524300 48 285 1 46 280 281 284 196670 279
       285 131321 247 131320 286 262205 48 287 251 524367 252 288
       287 287 0 1 2 327745 96 289 251 255 262205 6
       290 289 327745 19 291 236 29 262205 6 292 291 327813
       6 293 290 292 327761 6 294 288 0 327761 6 295
       288 1 327761 6 296 288 2 458832 48 297 294 295
       296 293 196670 279 297 131321 247 131320 247 327745 298 299
       279 255 262205 6 300 299 327860 34 301 300 32 196855
       303 0 262394 301 302 303 131320 302 65788 131320 303 65789
       65592 327734 7 13 0 9 196663 8 10 196663 8 11
       196663 8 12 131320 14 262203 19 20 7 262203 19 31
       7 262203 19 41 7 262203 19 43 7 262203 19 51
       7 262203 19 56 7 262203 19 61 7 262203 19 70
       7 262203 19 74 7 262203 19 81 7 262203 19 101
       7 262205 22 25 24 262205 7 26 10 327785 7 27
       25 26 327761 6 30 27 0 196670 20 30 196670 31
       32 262205 6 33 20 327866 34 35 33 32 196855 37
       0 262394 35 36 37 131320 36 262205 6 38 20 327813
       6 40 38 39 196670 31 40 131321 37 131320 37 196670
       41 42 262205 22 44 24 262205 7 45 10 262205 7
       46 11 262205 7 47 12 524376 48 49 44 45 4
       46 47 327761 6 50 49 0 196670 43 50 262205 6
       52 43 262351 6 53 52 262205 6 54 41 327813 6
       55 53 54 196670 51 55 262205 6 57 43 262352 6
       58 57 262205 6 59 41 327813 6 60 58 59 196670
       56 60 262205 6 62 51 262205 6 63 51 327813 6
       64 62 63 262205 6 65 56 262205 6 66 56 327813
       6 67 65 66 327809 6 68 64 67 393228 6 69
       1 31 68 196670 61 69 262205 6 71 43 262205 6
       72 61 327811 6 73 71 72 196670 70 73 262205 6
       75 43 262205 6 76 61 327809 6 77 75 76 196670
       74 77 262205 6 78 31 262205 6 79 70 327809 6
       80 79 78 196670 70 80 196670 81 32 262205 6 82
       70 327870 34 83 82 32 196855 85 0 262394 83 84
       86 131320 84 196670 81 42 131321 85 131320 86 262205 6
       87 74 327870 34 88 87 32 196855 90 0 262394 88
       89 90 131320 89 262205 6 91 74 262205 6 92 74
       262205 6 93 70 327811 6 94 92 93 327816 6 95
       91 94 196670 81 95 131321 90 131320 90 131321 85 131320
       85 262205 6 98 97 262205 6 99 70 327809 6 100
       99 98 196670 70 100 196670 101 32 262205 6 102 70
       327870 34 103 102 32 196855 105 0 262394 103 104 106
       131320 104 196670 101 42 131321 105 131320 106 262205 6 107
       74 327870 34 108 107 32 196855 110 0 262394 108 109
       110 131320 109 262205 6 111 74 262205 6 112 74 262205
       6 113 70 327811 6 114 112 113 327816 6 115 111
       114 196670 101 115 131321 110 131320 110 131321 105 131320 105
       262205 6 116 81 262205 6 117 101 327760 7 118 116
       117 131326 118 65592 327734 7 17 0 15 196663 8 16
       131320 18 262203 19 121 7 262203 8 126 7 262203 8
       129 7 262203 8 136 7 262203 8 138 7 262203 8
       140 7 262203 19 144 7 262203 19 150 7 262203 19
       156 7 262203 19 162 7 262203 8 168 7 262203 8
       173 7 262203 8 178 7 262203 8 180 7 262203 19
       189 7 262203 8 198 7 262203 19 203 7 262203 8
       213 7 262203 8 215 7 262203 8 217 7 262205 22
       122 24 262205 7 123 16 327785 7 124 122 123 327761
       6 125 124 0 196670 121 125 262205 7 127 16 262351
       7 128 127 196670 126 128 262205 7 130 16 262352 7
       131 130 196670 129 131 262205 6 132 121 327868 34 133
       132 32 196855 135 0 262394 133 134 135 131320 134 262205
       7 137 16 196670 136 137 262205 7 139 126 196670 138
       139 262205 7 141 129 196670 140 141 458809 7 142 13
       136 138 140 131326 142 131320 135 262205 7 145 126 393228
       6 146 1 66 145 262205 7 147 129 393228 6 148
       1 66 147 327813 6 149 146 148 196670 144 149 262205
       6 151 144 393228 6 152 1 31 151 262205 6 153
       121 327809 6 154 42 153 327816 6 155 152 154 196670
       150 155 262205 7 157 126 393228 6 158 1 66 157
       262205 6 159 150 327816 6 160 158 159 393228 6 161
       1 9 160 196670 156 161 262205 7 163 129 393228 6
       164 1 66 163 262205 6 165 150 327816 6 166 164
       165 393228 6 167 1 9 166 196670 162 167 262205 7
       169 126 262205 6 170 156 327760 7 171 170 170 327816
       7 172 169 171 196670 168 172 262205 7 174 129 262205
       6 175 162 327760 7 176 175 175 327816 7 177 174
       176 196670 173 177 196670 178 179 262205 7 181 16 262205
       7 182 126 327822 7 184 182 183 327811 7 185 181
       184 262205 7 186 129 327822 7 187 186 183 327811 7
       188 185 187 196670 180 188 196670 189 32 131321 190 131320
       190 262390 192 193 0 131321 194 131320 194 262205 6 195
       189 262205 6 196 162 327864 34 197 195 196 262394 197
       191 192 131320 191 262205 7 199 180 196670 198 199 262205
       7 200 180 262205 7 201 173 327809 7 202 200 201
       196670 180 202 196670 203 32 131321 204 131320 204 262390 206
       207 0 131321 208 131320 208 262205 6 209 203 262205 6
       210 156 327864 34 211 209 210 262394 211 205 206 131320
       205 262205 7 212 178 262205 7 214 198 196670 213 214
       262205 7 216 168 196670 215 216 262205 7 218 173 196670
       217 218 458809 7 219 13 213 215 217 327809 7 220
       212 219 196670 178 220 262205 7 221 198 262205 7 222
       168 327809 7 223 221 222 196670 198 223 131321 207 131320
       207 262205 6 224 203 327809 6 225 224 42 196670 203
       225 131321 204 131320 206 131321 193 131320 193 262205 6 226
       189 327809 6 227 226 42 196670 189 227 131321 190 131320
       192 262205 7 228 178 262205 6 229 156 262205 6 230
       162 327813 6 231 229 230 327760 7 232 231 231 327816
       7 233 228 232 131326 233 65592
    }
    NumSpecializationConstants 0
  }
  hints id=22 vsg::ShaderCompileSettings
  {
    vulkanVersion 4194304
    clientInputVersion 100
    language 0
    defaultVersion 450
    target 65536
    forwardCompatible 0
    defines 1
    element "GPU_LAYOUT"
  }
  stages 2
  vsg::ShaderStage id=23 vsg::ShaderStage
  {
    userObjects 0
    stage 1
    entryPointName "main"
    module id=24 vsg::ShaderModule
    {
      userObjects 0
      hints id=22
      source ""
      code 1373
       119734787 65536 524298 210 0 131089 1 393227 1 1280527431 1685353262 808793134
       0 196622 0 1 786447 0 4 1852399981 0 23 118 150
       182 186 189 194 196611 2 450 589828 1096764487 1935622738 1918988389 1600484449
       1684105331 1868526181 1667590754 29556 262149 4 1852399981 0 327685 8 1769107304 1635148865
       6644590 327685 10 1953654134 1635148865 6644590 196613 13 105 458757 23 1230990439
       1635021678 1231381358 2019910766 0 327685 28 1887005799 1852399464 7890276 393221 30 1416459630
       1232369765 1667851374 29541 327685 32 1954047316 1768189513 7562595 393222 32 0 1887005799
       1852399464 7890276 262149 34 1954047348 0 458757 55 1887005799 1952796008 1935894898 1886216531
       7497068 327685 70 1887005799 1852399464 7890276 327685 79 1701669220 1869181806 29550 327685
       85 1918985570 1936158313 0 262149 91 1918858869 25445 196613 100 7565168 327685
       101 1954047316 1870225740 29813 393222 101 0 1769172848 1852795252 0 393222 101
       1 1769107304 1953394554 27745 393222 101 2 1953654134 1818321769 0 327686 101
       3 1869377379 114 458758 101 4 1819571567 1130720873 1919904879 0 458758 101
       5 1819571567 1466265193 1752458345 0 327685 103 1954047348 1870225740 29813 327685 118
       1867542121 1769236851 28271 393221 148 1348430951 1700164197 2019914866 0 393222 148 0
       1348430951 1953067887 7237481 196613 150 0 393221 152 1752397136 1936617283 1953390964 115
       393222 152 0 1785688688 1769235301 28271 393222 152 1 1701080941 1701410412 119
       196613 154 25456 327685 182 1734439526 1869377347 114 393221 186 1819571567 1130720873
       1919904879 0 393221 189 1819571567 1466265193 1752458345 0 393221 194 1734439526 1131963732
       1685221231 0 262215 23 11 43 262215 30 1 0 262215 31
       6 16 327752 32 0 35 0 196679 32 2 262215 34
       34 1 262215 34 33 1 262215 55 34 0 262215 55
       33 1 327752 101 0 35 0 327752 101 1 35 16
       327752 101 2 35 32 327752 101 3 35 48 327752 101
       4 35 64 327752 101 5 35 80 196679 101 2 262215
       103 34 1 262215 103 33 0 262215 118 30 0 327752
       148 0 11 0 196679 148 2 262216 152 0 5 327752
       152 0 35 0 327752 152 0 7 16 262216 152 1
       5 327752 152 1 35 64 327752 152 1 7 16 196679
       152 2 262215 182 30 0 262215 186 30 1 262215 189
       30 2 262215 194 30 3 131091 2 196641 3 2 196630
       6 32 262176 7 7 6 262187 6 9 0 262165 11
       32 0 262176 12 7 11 262187 11 14 0 262165 21
       32 1 262176 22 1 21 262203 22 23 1 131092 26
       262167 29 11 4 262194 11 30 256 262172 31 29 30
       196638 32 31 262176 33 2 32 262203 33 34 2 262187
       21 35 0 262187 11 37 4 262176 41 2 11 262187
       6 48 1065353216 589849 52 6 1 0 0 0 1 0
       196635 53 52 262176 54 0 53 262203 54 55 0 262167
       59 6 2 262167 61 6 4 262187 11 63 2 262187
       21 68 1 262187 21 72 4 262176 78 7 61 262187
       6 93 1073741824 262167 98 6 3 262176 99 7 98 524318
       101 61 61 61 61 61 6 262176 102 2 101 262203
       102 103 2 262176 104 2 61 262187 11 109 3 262176
       110 2 6 262176 117 1 98 262203 117 118 1 262176
       119 1 6 262187 21 127 2 262187 11 135 1 196638
       148 61 262176 149 3 148 262203 149 150 3 262168 151
       61 4 262174 152 151 151 262176 153 9 152 262203 153
       154 9 262176 155 9 151 262176 171 3 61 262187 6
       175 981668463 262176 177 3 6 262203 171 182 3 262187 21
       183 3 262203 171 186 3 262203 177 189 3 262187 21
       190 5 262176 193 3 59 262203 193 194 3 327734 2
       4 0 3 131320 5 262203 7 8 7 262203 7 10
       7 262203 12 13 7 262203 12 28 7 262203 12 70
       7 262203 78 79 7 262203 78 85 7 262203 78 91
       7 262203 99 100 7 196670 8 9 196670 10 9 196670
       13 14 131321 15 131320 15 262390 17 18 0 131321 19
       131320 19 262205 11 20 13 262205 21 24 23 262268 11
       25 24 327856 26 27 20 25 262394 27 16 17 131320
       16 262205 11 36 13 327814 11 38 36 37 262205 11
       39 13 327817 11 40 39 37 458817 41 42 34 35
       38 40 262205 11 43 42 196670 28 43 262205 11 44
       28 327850 26 45 44 14 196855 47 0 262394 45 46
       51 131320 46 262205 6 49 10 327811 6 50 49 48
       196670 10 50 196670 8 9 131321 47 131320 51 262205 53
       56 55 262205 11 57 28 262256 6 58 57 327760 59
       60 9 58 458840 61 62 56 60 2 9 327761 6
       64 62 2 262205 6 65 8 327809 6 66 65 64
       196670 8 66 131321 47 131320 47 131321 18 131320 18 262205
       11 67 13 327808 11 69 67 68 196670 13 69 131321
       15 131320 17 262205 21 71 23 327815 21 73 71 72
       262205 21 74 23 327819 21 75 74 72 458817 41 76
       34 35 73 75 262205 11 77 76 196670 70 77 262205
       53 80 55 262205 11 81 70 262256 6 82 81 327760
       59 83 9 82 458840 61 84 80 83 2 9 196670
       79 84 262205 53 86 55 262205 11 87 70 262256 6
       88 87 327760 59 89 48 88 458840 61 90 86 89
       2 9 196670 85 90 262205 53 92 55 262205 11 94
       70 262256 6 95 94 327760 59 96 93 95 458840 61
       97 92 96 2 9 196670 91 97 327745 104 105 103
       68 262205 61 106 105 524367 98 107 106 106 0 1
       2 262205 6 108 8 393281 110 111 103 68 109 262205
       6 112 111 327809 6 113 108 112 327745 7 114 85
       14 262205 6 115 114 327809 6 116 113 115 327745 119
       120 118 14 262205 6 121 120 327745 7 122 79 14
       262205 6 123 122 327813 6 124 121 123 327809 6 125
       116 124 327822 98 126 107 125 327745 104 128 103 127
       262205 61 129 128 524367 98 130 129 129 0 1 2
       262205 6 131 10 393281 110 132 103 127 109 262205 6
       133 132 327809 6 134 131 133 327745 7 136 85 135
       262205 6 137 136 327809 6 138 134 137 327745 119 139
       118 135 262205 6 140 139 327811 6 141 140 48 327745
       7 142 79 135 262205 6 143 142 327813 6 144 141
       143 327809 6 145 138 144 327822 98 146 130 145 327809
       98 147 126 146 196670 100 147 327745 155 156 154 35
       262205 151 157 156 327745 155 158 154 68 262205 151 159
       158 327826 151 160 157 159 327745 104 161 103 35 262205
       61 162 161 524367 98 163 162 162 0 1 2 262205
       98 164 100 327809 98 165 163 164 327761 6 166 165
       0 327761 6 167 165 1 327761 6 168 165 2 458832
       61 169 166 167 168 48 327825 61 170 160 169 327745
       171 172 150 35 196670 172 170 327745 119 173 118 63
       262205 6 174 173 327813 6 176 174 175 393281 177 178
       150 35 63 262205 6 179 178 327811 6 180 179 176
       393281 177 181 150 35 63 196670 181 180 327745 104 184
       103 183 262205 61 185 184 196670 182 185 327745 104 187
       103 72 262205 61 188 187 196670 186 188 327745 110 191
       103 190 262205 6 192 191 196670 189 192 327745 7 195
       91 14 262205 6 196 195 327745 7 197 91 63 262205
       6 198 197 327745 119 199 118 14 262205 6 200 199
       524300 6 201 1 46 196 198 200 327745 7 202 91
       135 262205 6 203 202 327745 7 204 91 109 262205 6
       205 204 327745 119 206 118 135 262205 6 207 206 524300
       6 208 1 46 203 205 207 327760 59 209 201 208
       196670 194 209 65789 65592
    }
    NumSpecializationConstants 1
    id 0
    data id=4
  }
  vsg::ShaderStage id=20
  hints id=25 vsg::ShaderCompileSettings
  {
    vulkanVersion 4194304
    clientInputVersion 100
    language 0
    defaultVersion 450
    target 65536
    forwardCompatible 0
    defines 2
    element "BILLBOARD"
    element "CPU_LAYOUT"
  }
  stages 2
  vsg::ShaderStage id=26 vsg::ShaderStage
  {
    userObjects 0
    stage 1
    entryPointName "main"
    module id=27 vsg::ShaderModule
    {
      userObjects 0
      hints id=25
      source ""
      code 893
       119734787 65536 524298 132 0 131089 1 393227 1 1280527431 1685353262 808793134
       0 196622 0 1 1048591 0 4 1852399981 0 68 81 99
       108 118 119 121 122 124 125 129 196611 2 450 589828
       1096764487 1935622738 1918988389 1600484449 1684105331 1868526181 1667590754 29556 262149 4 1852399981 0
       655365 14 1886220131 1113945205 1651272809 1298424175 1769108577 1719019640 828783412 59 327685 12
       1953391971 1700754021 25977 458757 13 1869903201 1818321747 1936278629 1668178292 101 327685 16
       1953720676 1701015137 0 262149 22 1818321779 101 196613 37 83 196613 47
       84 393221 66 1348430951 1700164197 2019914866 0 393222 66 0 1348430951 1953067887
       7237481 196613 68 0 393221 71 1752397136 1936617283 1953390964 115 393222 71
       0 1785688688 1769235301 28271 393222 71 1 1701080941 1701410412 119 196613 73
       25456 655365 81 1698917993 1919251566 1097100865 1399813237 1701601635 1953720644 1701015137 0 262149
       90 1634886000 109 262149 91 1634886000 109 327685 99 1867542121 1769236851 28271
       327685 108 1700032105 1869562744 25714 327685 118 1734439526 1869377347 114 262149 119
       1866690153 7499628 393221 121 1819571567 1130720873 1919904879 0 393221 122 1968139881 1852402804
       1819231077 29295 393221 124 1819571567 1466265193 1752458345 0 393221 125 1968139881 1852402804
       1684625253 26740 393221 129 1734439526 1131963732 1685221231 0 327752 66 0 11
       0 196679 66 2 262216 71 0 5 327752 71 0 35
       0 327752 71 0 7 16 262216 71 1 5 327752 71
)"
R"(       1 35 64 327752 71 1 7 16 196679 71 2 262215
       81 30 5 262215 99 30 0 262215 108 30 4 262215
       118 30 0 262215 119 30 1 262215 121 30 1 262215
       122 30 2 262215 124 30 2 262215 125 30 3 262215
       129 30 3 131091 2 196641 3 2 196630 6 32 262167
       7 6 4 262176 8 7 7 262176 9 7 6 262168
       10 7 4 327713 11 10 8 9 262165 17 32 0
       262187 17 18 2 131092 25 262187 6 34 1065353216 262176 36
       7 10 262187 6 39 0 262187 17 48 0 262187 17
       51 1 196638 66 7 262176 67 3 66 262203 67 68
       3 262165 69 32 1 262187 69 70 0 262174 71 10
       10 262176 72 9 71 262203 72 73 9 262176 74 9
       10 262187 69 77 1 262176 80 1 7 262203 80 81
       1 262167 82 6 3 262187 17 92 3 262176 93 1
       6 262176 98 1 82 262203 98 99 1 262176 106 3
       7 262203 98 108 1 262187 6 111 981668463 262176 113 3
       6 262203 106 118 3 262203 80 119 1 262203 106 121
       3 262203 80 122 1 262203 113 124 3 262203 93 125
       1 262167 127 6 2 262176 128 3 127 262203 128 129
       3 327734 2 4 0 3 131320 5 262203 8 90 7
       262203 9 91 7 327745 74 75 73 70 262205 10 76
       75 327745 74 78 73 77 262205 10 79 78 262205 7
       83 81 524367 82 84 83 83 0 1 2 327761 6
       85 84 0 327761 6 86 84 1 327761 6 87 84
       2 458832 7 88 85 86 87 34 327825 7 89 79
       88 196670 90 89 327745 93 94 81 92 262205 6 95
       94 196670 91 95 393273 10 96 14 90 91 327826 10
       97 76 96 262205 82 100 99 327761 6 101 100 0
       327761 6 102 100 1 327761 6 103 100 2 458832 7
       104 101 102 103 34 327825 7 105 97 104 327745 106
       107 68 70 196670 107 105 327745 93 109 108 18 262205
       6 110 109 327813 6 112 110 111 393281 113 114 68
       70 18 262205 6 115 114 327811 6 116 115 112 393281
       113 117 68 70 18 196670 117 116 262205 7 120 119
       196670 118 120 262205 7 123 122 196670 121 123 262205 6
       126 125 196670 124 126 262205 82 130 108 458831 127 131
       130 130 0 1 196670 129 131 65789 65592 327734 10 14
       0 11 196663 8 12 196663 9 13 131320 15 262203 9
       16 7 262203 9 22 7 262203 9 27 7 262203 36
       37 7 262203 36 47 7 327745 9 19 12 18 262205
       6 20 19 262271 6 21 20 196670 16 21 262205 6
       23 16 262205 6 24 13 327864 25 26 23 24 196855
       29 0 262394 26 28 33 131320 28 262205 6 30 16
       262205 6 31 13 327816 6 32 30 31 196670 27 32
       131321 29 131320 33 196670 27 34 131321 29 131320 29 262205
       6 35 27 196670 22 35 262205 6 38 22 262205 6
       40 22 262205 6 41 22 458832 7 42 38 39 39
       39 458832 7 43 39 40 39 39 458832 7 44 39
       39 41 39 458832 7 45 39 39 39 34 458832 10
       46 42 43 44 45 196670 37 46 327745 9 49 12
       48 262205 6 50 49 327745 9 52 12 51 262205 6
       53 52 327745 9 54 12 18 262205 6 55 54 458832
       7 56 34 39 39 39 458832 7 57 39 34 39
       39 458832 7 58 39 39 34 39 458832 7 59 50
       53 55 34 458832 10 60 56 57 58 59 196670 47
       60 262205 10 61 47 262205 10 62 37 327826 10 63
       61 62 131326 63 65592
    }
    NumSpecializationConstants 1
    id 0
    data id=4
  }
  vsg::ShaderStage id=20
  hints id=28 vsg::ShaderCompileSettings
  {
    vulkanVersion 4194304
    clientInputVersion 100
    language 0
    defaultVersion 450
    target 65536
    forwardCompatible 0
    defines 2
    element "BILLBOARD"
    element "GPU_LAYOUT"
  }
  stages 2
  vsg::ShaderStage id=29 vsg::ShaderStage
  {
    userObjects 0
    stage 1
    entryPointName "main"
    module id=30 vsg::ShaderModule
    {
      userObjects 0
      hints id=28
      source ""
      code 1715
       119734787 65536 524298 267 0 131089 1 393227 1 1280527431 1685353262 808793134
       0 196622 0 1 786447 0 4 1852399981 0 78 168 199
       239 243 246 251 196611 2 450 589828 1096764487 1935622738 1918988389 1600484449
       1684105331 1868526181 1667590754 29556 262149 4 1852399981 0 655365 14 1886220131 1113945205
       1651272809 1298424175 1769108577 1719019640 828783412 59 327685 12 1953391971 1700754021 25977 458757
       13 1869903201 1818321747 1936278629 1668178292 101 327685 16 1953720676 1701015137 0 262149
       22 1818321779 101 196613 37 83 196613 47 84 327685 66 1769107304
       1635148865 6644590 327685 67 1953654134 1635148865 6644590 196613 69 105 458757 78
       1230990439 1635021678 1231381358 2019910766 0 327685 82 1887005799 1852399464 7890276 393221 84
       1416459630 1232369765 1667851374 29541 327685 86 1954047316 1768189513 7562595 393222 86 0
       1887005799 1852399464 7890276 262149 88 1954047348 0 458757 108 1887005799 1952796008 1935894898
       1886216531 7497068 327685 121 1887005799 1852399464 7890276 327685 129 1701669220 1869181806 29550
       327685 135 1918985570 1936158313 0 262149 141 1918858869 25445 196613 150 7565168
       327685 151 1954047316 1870225740 29813 393222 151 0 1769172848 1852795252 0 393222
       151 1 1769107304 1953394554 27745 393222 151 2 1953654134 1818321769 0 327686
       151 3 1869377379 114 458758 151 4 1819571567 1130720873 1919904879 0 458758
       151 5 1819571567 1466265193 1752458345 0 327685 153 1954047348 1870225740 29813 327685
       168 1867542121 1769236851 28271 393221 197 1348430951 1700164197 2019914866 0 393222 197
       0 1348430951 1953067887 7237481 196613 199 0 393221 200 1752397136 1936617283 1953390964
       115 393222 200 0 1785688688 1769235301 28271 393222 200 1 1701080941 1701410412
       119 196613 202 25456 262149 216 1634886000 109 262149 217 1634886000 109
       327685 239 1734439526 1869377347 114 393221 243 1819571567 1130720873 1919904879 0 393221
       246 1819571567 1466265193 1752458345 0 393221 251 1734439526 1131963732 1685221231 0 262215
       78 11 43 262215 84 1 0 262215 85 6 16 327752
       86 0 35 0 196679 86 2 262215 88 34 1 262215
       88 33 1 262215 108 34 0 262215 108 33 1 327752
       151 0 35 0 327752 151 1 35 16 327752 151 2
       35 32 327752 151 3 35 48 327752 151 4 35 64
       327752 151 5 35 80 196679 151 2 262215 153 34 1
       262215 153 33 0 262215 168 30 0 327752 197 0 11
       0 196679 197 2 262216 200 0 5 327752 200 0 35
       0 327752 200 0 7 16 262216 200 1 5 327752 200
       1 35 64 327752 200 1 7 16 196679 200 2 262215
       239 30 0 262215 243 30 1 262215 246 30 2 262215
       251 30 3 131091 2 196641 3 2 196630 6 32 262167
       7 6 4 262176 8 7 7 262176 9 7 6 262168
       10 7 4 327713 11 10 8 9 262165 17 32 0
       262187 17 18 2 131092 25 262187 6 34 1065353216 262176 36
       7 10 262187 6 39 0 262187 17 48 0 262187 17
       51 1 262176 68 7 17 262165 76 32 1 262176 77
       1 76 262203 77 78 1 262167 83 17 4 262194 17
       84 256 262172 85 83 84 196638 86 85 262176 87 2
       86 262203 87 88 2 262187 76 89 0 262187 17 91
       4 262176 95 2 17 589849 105 6 1 0 0 0
       1 0 196635 106 105 262176 107 0 106 262203 107 108
       0 262167 112 6 2 262187 76 119 1 262187 76 123
       4 262187 6 143 1073741824 262167 148 6 3 262176 149 7
       148 524318 151 7 7 7 7 7 6 262176 152 2
       151 262203 152 153 2 262176 154 2 7 262187 17 159
       3 262176 160 2 6 262176 167 1 148 262203 167 168
       1 262176 169 1 6 262187 76 177 2 196638 197 7
       262176 198 3 197 262203 198 199 3 262174 200 10 10
       262176 201 9 200 262203 201 202 9 262176 203 9 10
       262176 228 3 7 262187 6 232 981668463 262176 234 3 6
       262203 228 239 3 262187 76 240 3 262203 228 243 3
       262203 234 246 3 262187 76 247 5 262176 250 3 112
       262203 250 251 3 327734 2 4 0 3 131320 5 262203
       9 66 7 262203 9 67 7 262203 68 69 7 262203
       68 82 7 262203 68 121 7 262203 8 129 7 262203
       8 135 7 262203 8 141 7 262203 149 150 7 262203
       8 216 7 262203 9 217 7 196670 66 39 196670 67
       39 196670 69 48 131321 70 131320 70 262390 72 73 0
       131321 74 131320 74 262205 17 75 69 262205 76 79 78
       262268 17 80 79 327856 25 81 75 80 262394 81 71
       72 131320 71 262205 17 90 69 327814 17 92 90 91
       262205 17 93 69 327817 17 94 93 91 458817 95 96
       88 89 92 94 262205 17 97 96 196670 82 97 262205
       17 98 82 327850 25 99 98 48 196855 101 0 262394
       99 100 104 131320 100 262205 6 102 67 327811 6 103
       102 34 196670 67 103 196670 66 39 131321 101 131320 104
       262205 106 109 108 262205 17 110 82 262256 6 111 110
       327760 112 113 39 111 458840 7 114 109 113 2 39
       327761 6 115 114 2 262205 6 116 66 327809 6 117
       116 115 196670 66 117 131321 101 131320 101 131321 73 131320
       73 262205 17 118 69 327808 17 120 118 119 196670 69
       120 131321 70 131320 72 262205 76 122 78 327815 76 124
       122 123 262205 76 125 78 327819 76 126 125 123 458817
       95 127 88 89 124 126 262205 17 128 127 196670 121
       128 262205 106 130 108 262205 17 131 121 262256 6 132
       131 327760 112 133 39 132 458840 7 134 130 133 2
       39 196670 129 134 262205 106 136 108 262205 17 137 121
       262256 6 138 137 327760 112 139 34 138 458840 7 140
       136 139 2 39 196670 135 140 262205 106 142 108 262205
       17 144 121 262256 6 145 144 327760 112 146 143 145
       458840 7 147 142 146 2 39 196670 141 147 327745 154
       155 153 119 262205 7 156 155 524367 148 157 156 156
       0 1 2 262205 6 158 66 393281 160 161 153 119
       159 262205 6 162 161 327809 6 163 158 162 327745 9
       164 135 48 262205 6 165 164 327809 6 166 163 165
       327745 169 170 168 48 262205 6 171 170 327745 9 172
       129 48 262205 6 173 172 327813 6 174 171 173 327809
       6 175 166 174 327822 148 176 157 175 327745 154 178
       153 177 262205 7 179 178 524367 148 180 179 179 0
       1 2 262205 6 181 67 393281 160 182 153 177 159
       262205 6 183 182 327809 6 184 181 183 327745 9 185
       135 51 262205 6 186 185 327809 6 187 184 186 327745
       169 188 168 51 262205 6 189 188 327811 6 190 189
       34 327745 9 191 129 51 262205 6 192 191 327813 6
       193 190 192 327809 6 194 187 193 327822 148 195 180
       194 327809 148 196 176 195 196670 150 196 327745 203 204
       202 89 262205 10 205 204 327745 203 206 202 119 262205
       10 207 206 327745 154 208 153 89 262205 7 209 208
       524367 148 210 209 209 0 1 2 327761 6 211 210
       0 327761 6 212 210 1 327761 6 213 210 2 458832
       7 214 211 212 213 34 327825 7 215 207 214 196670
       216 215 393281 160 218 153 89 159 262205 6 219 218
       196670 217 219 393273 10 220 14 216 217 327826 10 221
       205 220 262205 148 222 150 327761 6 223 222 0 327761
       6 224 222 1 327761 6 225 222 2 458832 7 226
       223 224 225 34 327825 7 227 221 226 327745 228 229
       199 89 196670 229 227 327745 169 230 168 18 262205 6
       231 230 327813 6 233 231 232 393281 234 235 199 89
       18 262205 6 236 235 327811 6 237 236 233 393281 234
       238 199 89 18 196670 238 237 327745 154 241 153 240
       262205 7 242 241 196670 239 242 327745 154 244 153 123
       262205 7 245 244 196670 243 245 327745 160 248 153 247
       262205 6 249 248 196670 246 249 327745 9 252 141 48
       262205 6 253 252 327745 9 254 141 18 262205 6 255
       254 327745 169 256 168 48 262205 6 257 256 524300 6
       258 1 46 253 255 257 327745 9 259 141 51 262205
       6 260 259 327745 9 261 141 159 262205 6 262 261
       327745 169 263 168 51 262205 6 264 263 524300 6 265
       1 46 260 262 264 327760 112 266 258 265 196670 251
       266 65789 65592 327734 10 14 0 11 196663 8 12 196663
       9 13 131320 15 262203 9 16 7 262203 9 22 7
       262203 9 27 7 262203 36 37 7 262203 36 47 7
       327745 9 19 12 18 262205 6 20 19 262271 6 21
       20 196670 16 21 262205 6 23 16 262205 6 24 13
       327864 25 26 23 24 196855 29 0 262394 26 28 33
       131320 28 262205 6 30 16 262205 6 31 13 327816 6
       32 30 31 196670 27 32 131321 29 131320 33 196670 27
       34 131321 29 131320 29 262205 6 35 27 196670 22 35
       262205 6 38 22 262205 6 40 22 262205 6 41 22
       458832 7 42 38 39 39 39 458832 7 43 39 40
       39 39 458832 7 44 39 39 41 39 458832 7 45
       39 39 39 34 458832 10 46 42 43 44 45 196670
       37 46 327745 9 49 12 48 262205 6 50 49 327745
       9 52 12 51 262205 6 53 52 327745 9 54 12
       18 262205 6 55 54 458832 7 56 34 39 39 39
       458832 7 57 39 34 39 39 458832 7 58 39 39
       34 39 458832 7 59 50 53 55 34 458832 10 60
       56 57 58 59 196670 47 60 262205 10 61 47 262205
       10 62 37 327826 10 63 61 62 131326 63 65592
    }
    NumSpecializationConstants 1
    id 0
    data id=4
  }
  vsg::ShaderStage id=20
}
)");
vsg::VSG io;
return io.read_cast<vsg::ShaderSet>(str);
};
